
<!DOCTYPE html>
<html>
  <head>
<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"e76002533e","applicationID":"95181936","transactionName":"JwoKTUoLXF0DF0tDAAZKF01ZEFVCSQgFRA==","queueTime":2,"applicationTime":120,"agent":""}</script>
<script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,t,n){function r(n){if(!t[n]){var o=t[n]={exports:{}};e[n][0].call(o.exports,function(t){var o=e[n][1][t];return r(o||t)},o,o.exports)}return t[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(e,t,n){function r(){}function o(e,t,n){return function(){return i(e,[f.now()].concat(u(arguments)),t?null:this,n),t?void 0:this}}var i=e("handle"),a=e(2),u=e(3),c=e("ee").get("tracer"),f=e("loader"),s=NREUM;"undefined"==typeof window.newrelic&&(newrelic=s);var p=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],d="api-",l=d+"ixn-";a(p,function(e,t){s[t]=o(d+t,!0,"api")}),s.addPageAction=o(d+"addPageAction",!0),s.setCurrentRouteName=o(d+"routeName",!0),t.exports=newrelic,s.interaction=function(){return(new r).get()};var m=r.prototype={createTracer:function(e,t){var n={},r=this,o="function"==typeof t;return i(l+"tracer",[f.now(),e,n],r),function(){if(c.emit((o?"":"no-")+"fn-start",[f.now(),r,o],n),o)try{return t.apply(this,arguments)}catch(e){throw c.emit("fn-err",[arguments,this,e],n),e}finally{c.emit("fn-end",[f.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,t){m[t]=o(l+t)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,f.now()])}},{}],2:[function(e,t,n){function r(e,t){var n=[],r="",i=0;for(r in e)o.call(e,r)&&(n[i]=t(r,e[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],3:[function(e,t,n){function r(e,t,n){t||(t=0),"undefined"==typeof n&&(n=e?e.length:0);for(var r=-1,o=n-t||0,i=Array(o<0?0:o);++r<o;)i[r]=e[t+r];return i}t.exports=r},{}],4:[function(e,t,n){t.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],ee:[function(e,t,n){function r(){}function o(e){function t(e){return e&&e instanceof r?e:e?c(e,u,i):i()}function n(n,r,o,i){if(!d.aborted||i){e&&e(n,r,o);for(var a=t(o),u=m(n),c=u.length,f=0;f<c;f++)u[f].apply(a,r);var p=s[y[n]];return p&&p.push([b,n,r,a]),a}}function l(e,t){v[e]=m(e).concat(t)}function m(e){return v[e]||[]}function w(e){return p[e]=p[e]||o(n)}function g(e,t){f(e,function(e,n){t=t||"feature",y[n]=t,t in s||(s[t]=[])})}var v={},y={},b={on:l,emit:n,get:w,listeners:m,context:t,buffer:g,abort:a,aborted:!1};return b}function i(){return new r}function a(){(s.api||s.feature)&&(d.aborted=!0,s=d.backlog={})}var u="nr@context",c=e("gos"),f=e(2),s={},p={},d=t.exports=o();d.backlog=s},{}],gos:[function(e,t,n){function r(e,t,n){if(o.call(e,t))return e[t];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[t]=r,r}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],handle:[function(e,t,n){function r(e,t,n,r){o.buffer([e],r),o.emit(e,t,n)}var o=e("ee").get("handle");t.exports=r,r.ee=o},{}],id:[function(e,t,n){function r(e){var t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");t.exports=r},{}],loader:[function(e,t,n){function r(){if(!x++){var e=h.info=NREUM.info,t=d.getElementsByTagName("script")[0];if(setTimeout(s.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&t))return s.abort();f(y,function(t,n){e[t]||(e[t]=n)}),c("mark",["onload",a()+h.offset],null,"api");var n=d.createElement("script");n.src="https://"+e.agent,t.parentNode.insertBefore(n,t)}}function o(){"complete"===d.readyState&&i()}function i(){c("mark",["domContent",a()+h.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(u=Math.max((new Date).getTime(),u))-h.offset}var u=(new Date).getTime(),c=e("handle"),f=e(2),s=e("ee"),p=window,d=p.document,l="addEventListener",m="attachEvent",w=p.XMLHttpRequest,g=w&&w.prototype;NREUM.o={ST:setTimeout,SI:p.setImmediate,CT:clearTimeout,XHR:w,REQ:p.Request,EV:p.Event,PR:p.Promise,MO:p.MutationObserver};var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1071.min.js"},b=w&&g&&g[l]&&!/CriOS/.test(navigator.userAgent),h=t.exports={offset:u,now:a,origin:v,features:{},xhrWrappable:b};e(1),d[l]?(d[l]("DOMContentLoaded",i,!1),p[l]("load",r,!1)):(d[m]("onreadystatechange",o),p[m]("onload",r)),c("mark",["firstbyte",u],null,"api");var x=0,E=e(4)},{}]},{},["loader"]);</script>
    <title>Neta</title>
    <meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="pbep4cBN/BLFieSREqRY1kBeqA7YWBylHvwwrTIOYPuYU3BDNJUqFRPCbzam5XVc5bqoTDYs31qu3jzgrqngKQ==" />
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link href="https://fonts.googleapis.com/css?family=Cabin:400,700" rel="stylesheet">
    <link rel="stylesheet" media="all" href="../stylesheets/application-cb0dd668b47974a2ad5a7922a588487b4707c30fb80e5ee4c76fe7789bb2f005.css" data-turbolinks-track="reload" />
    <script src="../javascripts/application-7425b2bb0af047eb82a2f9de432760822b4def02bab29a9bbdd1da57b5ceefeb.js" data-turbolinks-track="reload"></script>
  </head>

  <body>
<!--     <p class="notice"></p>
    <p class="alert"></p>
 -->    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.1/mapbox-gl.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.1/mapbox-gl.css' rel='stylesheet' />

<div id="map" style="width: 800px; height: 800px">
</div>

<script src="https://js.pusher.com/4.3/pusher.min.js"></script>
    <script>
        // Enable pusher logging - don't include this in production
        Pusher.logToConsole = true;
		window.meta_data=null;
        var pusher = new Pusher('24e9d0687e80f1b51c74',
            { cluster: 'ap2', forceTLS: true });
        var channel = pusher.subscribe('my-channel');
        channel.bind('my-event',
            function (data) {
               // console.log(data);
				window.meta_data=data;
                alert(JSON.stringify(data));
            }
        );
    </script>
<script>
  mapboxgl.accessToken = 'pk.eyJ1IjoibWFkaHUzMTQiLCJhIjoiY2pjMXdsYW5hMDdmNzMybXdrM3o3MnRvdiJ9.DLm1UKSjtw6eWzzlAYBotQ';
  var map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/madhu314/cjc8zh45k7fpi2spltb98qv5c',
      center: [75.4185425090122, 30.8428469691133],
      zoom: 4,
      attributionControl: false,
      logoPosition: 'bottom-left'
  });

  map.on('load', function () {

		console.log("-----------");
		console.log(window.meta_data.message.cities[0].city_id);
		console.log("---------##");
        map.addSource("abhoar_map", {
          "type": "geojson",
          "data": {"type":"FeatureCollection","features":[{"id":"1c9533d7-ff3d-4047-a153-fd6d69016315","type":"Feature","geometry":{"type":"MultiPolygon","coordinates":[[[[73.9935260312014,15.2791380767609],[73.9984432768358,15.2669500516037],[73.9942748831793,15.2610846822124],[73.9898567747704,15.2630528979729],[73.9895234536446,15.2463676924151],[73.9826809492665,15.2559131298871],[73.9752862809372,15.2521518197507],[73.9736762453625,15.2359678162617],[73.9623849153317,15.2243017576201],[73.9460597587509,15.2407072488405],[73.9445211994938,15.2485260833121],[73.9570683698095,15.2705133355221],[73.9666620846875,15.2665909514113],[73.9683436046737,15.2753545317863],[73.9766002686875,15.2775267227801],[73.9788622596856,15.2680698604358],[73.9835068443654,15.2759486095408],[73.9935260312014,15.2791380767609]]]]}}]
		   }
		 })

        map.addLayer({
            "id": "stroke-layer",
            "type": "line",
            "source": "abhoar_map",
            "paint": {
                "line-color": "#000",
                "line-width": 6,
            },
            "filter": ["==", "$type", "Polygon"]
        });
		
		map.addLayer({
			id: 'state_map',
			source: 'abhoar_map',
			"type": "heatmap",
        "minzoom": 3,
        "maxzoom": 9,
        "paint": {
            // Increase the heatmap weight based on frequency and property magnitude
            "heatmap-weight": [
                "interpolate",
                ["linear"],
                ["get", "mag"],
                0, 0,
                6, 1
            ],
            // Increase the heatmap color weight weight by zoom level
            // heatmap-intensity is a multiplier on top of heatmap-weight
            "heatmap-intensity": [
                "interpolate",
                ["linear"],
                ["zoom"],
                0, 1,
                9, 3
            ],
            // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).
            // Begin color ramp at 0-stop with a 0-transparancy color
            // to create a blur-like effect.
            "heatmap-color": [
                "interpolate",
                ["linear"],
                ["heatmap-density"],
                1, "rgb(178,24,43)"
            ],
            // Adjust the heatmap radius by zoom level
            "heatmap-radius": [
                "interpolate",
                ["linear"],
                ["zoom"],
                0, 10,
                20, 10
            ],
            // Transition from heatmap to circle layer by zoom level
            "heatmap-opacity": [
                "interpolate",
                ["linear"],
                ["zoom"],
                7, 1,
                15, 0
            ],
        }
    });
	

        var coordinates = [[73.8853746519187,29.5438816786966],[73.8853746519187,32.5760303970852],[76.9441212541926,32.5760303970852],[76.9441212541926,29.5438816786966],[73.8853746519187,29.5438816786966]]
        var bounds = coordinates.reduce(function(bounds, coord) {
            return bounds.extend(coord);
        }, new mapboxgl.LngLatBounds(new mapboxgl.LngLat(coordinates[0][0], coordinates[0][1]), new mapboxgl.LngLat(coordinates[0][0], coordinates[0][1])));
        map.fitBounds(bounds, {
            padding: 10
        });
  });
</script>

  </body>
</html>
